figS10 # legend added in photoshop
grid.text("A", x = unit(0.035, "npc"), y = unit(0.98, "npc"), gp = gpar(fontsize=14, fontface = "bold"))
grid.text("B", x = unit(0.365, "npc"), y = unit(0.98, "npc"), gp = gpar(fontsize=14, fontface = "bold"))
grid.text("C", x = unit(0.675, "npc"), y = unit(0.98, "npc"), gp = gpar(fontsize=14, fontface = "bold"))
grid.text("D", x = unit(0.035, "npc"), y = unit(0.67, "npc"), gp = gpar(fontsize=14, fontface = "bold"))
grid.text("E", x = unit(0.365, "npc"), y = unit(0.67, "npc"), gp = gpar(fontsize=14, fontface = "bold"))
grid.text("F", x = unit(0.675, "npc"), y = unit(0.67, "npc"), gp = gpar(fontsize=14, fontface = "bold"))
grid.text("G", x = unit(0.035, "npc"), y = unit(0.37, "npc"), gp = gpar(fontsize=14, fontface = "bold"))
# Plot as a barplot, assigning different colours to the factor "Bleached" (healthy vs. bleaching coral). Colour the border of the bars black.
species.labels=c("Platygyra sp."=expression(italic("Platygyra sp.")),"Dipsastraea spp."=expression(italic("Dipsastraea spp.")),
"Favites pentagona"=expression(italic("Favites pentagona")),
"Hydnophora microconos"=expression(italic("Hydnophora microconos")),
"Montipora aequituberculata"=expression(italic("Montipora aequituberculata")),
"Pocillopora grandis"=expression(italic("Pocillopora grandis")),
"Porites lobata"=expression(italic("Porites lobata")), parse = TRUE)
figS11 <- ggplot(species.figure.bleaching, aes(x=species, y=proportion, group=binary.bleaching.2015c)) +
geom_bar(stat="identity", aes(fill=interaction(binary.bleaching.2015c,species)), colour="black") +
labs(x="", y="Percent Bleaching and Healthy", colour="", title="") +
theme_classic() +
theme(strip.background=element_blank(),
legend.title=element_blank(),
panel.spacing = unit(1.5, "lines"),
axis.title.y=element_text(margin=margin(0,15,0,10), size=14, face="plain"),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.text.x=element_text(angle=90, hjust=1, vjust=0.5),
axis.text = element_text(size = 12, color = "black"),
legend.position=c(0.9,0.93)) +
scale_x_discrete(labels=species.labels) +
scale_fill_manual(
values=c("white", "tomato2",  #platy
"white", "darkred", #por
"white", "sienna1",  #hdyno
"white","lightcoral",  # fpenta
"white","goldenrod2",  #dip
"white", "midnightblue",  #monti
"white","royalblue3"  #poci
)) +
guides(fill="none") +
expand_limits(y=c(0, 100))
figS11
# Load data
env<-read_excel("data/KI_env_all.xlsx")
site_info<-read_csv("data/KI_Monitoring_SiteData_Oct2020.csv")
# Load necessary libraries
library(here)
library(readxl)
library(tidyverse)
library(cowplot)
library(dplyr)
library(stringr)
# Load data
env<-read_excel("data/KI_env_all.xlsx")
site_info<-read_csv("data/KI_Monitoring_SiteData_Oct2020.csv")
site_info$site<-as.character(site_info$site)
str(site_info)
coral.data.master <- read.csv("data/Coral_Data_Master_forS3figure.csv", stringsAsFactors = FALSE)
microbe<-read_csv("data/MI_counts.csv")
# Clear environment
rm(list=ls())
# Load packages
library(here)
library(DHARMa)
library(performance)
# Load data
load(file="data/KI_TaggedCoralData.RData")
# Look at dfs
head(tagged.data)
head(tagged.bleaching)
# Load necessary libraries
library(here)
library(ggplot2)
# Load data
sitedata <- read.csv(here::here("data/sites","KI_Monitoring_SiteData_Oct2020.csv"))
# Load data
sitedata <- read.csv(here::here("data","KI_Monitoring_SiteData_Oct2020.csv"))
ggplot(sitedata, aes(x = Intersect_Pop_2km, y = Fishing_Buffer_10levels_Standardized)) +
geom_point(stat = "identity") +
labs(x = "Population within 2 km", y = "Subsistance fishing pressure") +
theme_classic()
## KI BLEACHING FIGURE #2 - TEMPERATURE STRESS
# Load necessary packages
library(imager)
library(here)
# Load necessary data
load("data/KI_SB_temp_wKim_1d_mean.RData")
load("data/NOAA_5km_bleachingbysite_mean.RData")
load("data/NOAA_5km_sst_bleachingbysite_mean.RData")
# Set a start and end date for plotting
# Set up and format data
# Set a start and end date for plotting
startdate <- as.POSIXct("2013-07-01 00:00:00",
tz="Pacific/Kiritimati",
format="%Y-%m-%d %H:%M:%S")
enddate <- as.POSIXct("2017-12-31 00:00:00",
tz="Pacific/Kiritimati",
format="%Y-%m-%d %H:%M:%S")
### Stopped here
# Truncate the data from startdate to enddate
KI_heat <- dhw_bleachingsites_mean[which(dhw_bleachingsites_mean$date>startdate),]
KI_heat <- KI_heat[which(KI_heat$date<enddate),]
KI_insitu <- insitu_mean[which(insitu_mean$xi3>startdate),]
KI_insitu <- KI_insitu[which(KI_insitu$xi3<enddate),]
KI_sat <- sst_bleachingsites_mean[which(sst_bleachingsites_mean$date>startdate),]
KI_sat <- KI_sat[which(KI_sat$date<enddate),]
# Rename columns
colnames(KI_heat)<- c("time","dhw")
cbar <- read.csv("data/cmap_enso.csv",header=F)
dhw.floor <- floor(KI_heat$dhw)+1
dhw.cc <- cbar[dhw.floor,]
dhw.cc.rgb <- rgb(dhw.cc)
from <- KI_heat$time-1.75*86400
to <- KI_heat$time+1.75*86400
#################################################################################
# polycurve function
# http://www.fromthebottomoftheheap.net/2013/01/11/shading-regions-under-a-curve/
polyCurve <- function(x, y, from, to, n = 50, miny,
col = "red", border = col) {
drawPoly <- function(fun, from, to, n = 50, miny, col, border) {
Sq <- seq(from = from, to = to, length = n)
polygon(x = c(Sq[1], Sq, Sq[n]),
y = c(miny, fun(Sq), miny),
col = col, border = border)
}
lf <- length(from)
stopifnot(identical(lf, length(to)))
if(length(col) != lf)
col <- rep(col, length.out = lf)
if(length(border) != lf)
border <- rep(border, length.out = lf)
if(missing(miny))
miny <- min(y)
interp <- approxfun(x = x, y = y)
mapply(drawPoly, from = from, to = to, col = col, border = border,
MoreArgs = list(fun = interp, n = n, miny = miny))
invisible()
}
# Colours for shading
cols <- c(rgb(cbar)[1], rgb(cbar)[4], rgb(cbar)[8], rgb(cbar)[12], rgb(cbar)[24])
# Need to add 2013 field season
KI2013 <- as.POSIXct("2013-07-31 00:00:00",tz="Pacific/Kiritimati", format="%Y-%m-%d %H:%M:%S")
KI2014 <- as.POSIXct("2014-09-01 00:00:00",tz="Pacific/Kiritimati", format="%Y-%m-%d %H:%M:%S")
KI2015a <- as.POSIXct("2015-01-20 00:00:00",tz="Pacific/Kiritimati", format="%Y-%m-%d %H:%M:%S")
KI2015b <- as.POSIXct("2015-05-10 00:00:00",tz="Pacific/Kiritimati", format="%Y-%m-%d %H:%M:%S")
KI2015c <- as.POSIXct("2015-07-25 00:00:00",tz="Pacific/Kiritimati", format="%Y-%m-%d %H:%M:%S")
KI2015d <- as.POSIXct("2015-11-06 00:00:00",tz="Pacific/Kiritimati", format="%Y-%m-%d %H:%M:%S")
KI2016a <- as.POSIXct("2016-03-25 00:00:00",tz="Pacific/Kiritimati", format="%Y-%m-%d %H:%M:%S")
KI2016b <- as.POSIXct("2016-11-01 00:00:00",tz="Pacific/Kiritimati", format="%Y-%m-%d %H:%M:%S")
KI2017 <- as.POSIXct("2017-07-15 00:00:00",tz="Pacific/Kiritimati", format="%Y-%m-%d %H:%M:%S")
# Set inner and outer margins
par(oma=c(0,0,0,0),mar=c(1.5,3.2,1,2.5),mfrow=c(2,1))
layout(matrix(c(1,2),nrow=2),heights=c(1,1.5))
# Plot with the polycurve function
with(KI_heat, plot(KI_heat$time,KI_heat$dhw, type="l",
xlab="", ylab="", ylim=c(0,26),cex.axis=1,xaxt='n',yaxt='n',
cex.lab=1.2,yaxs="i",xaxs="i",lwd=0.5, col="gray40",
panel.first = # Panel first allows ablines to be plotted before polycurve, looks nicer.
c(abline(v=KI2013,col="darkgray",
lwd=2,lty=2),
abline(v=KI2014,col="darkgray",
lwd=2,lty=2),
abline(v=KI2015a,col="darkgray",
lwd=2,lty=2),
abline(v=KI2015b,col="darkgray",
lwd=2,lty=2),
abline(v=KI2015c,col="darkgray",
lwd=2,lty=2),
abline(v=KI2015d,col="darkgray",
lwd=2,lty=2),
abline(v=KI2016a,col="darkgray",
lwd=2,lty=2),
abline(v=KI2016b,col="darkgray",
lwd=2,lty=2),
abline(v=KI2017,col="darkgray",
lwd=2,lty=2),
polyCurve(KI_heat$time,
KI_heat$dhw, from = from,
to = to, miny = 0,
col = dhw.cc.rgb)
)))
Y <- c(0,5,10,15,20,25)
axis(side=2,at=Y,cex.axis=0.93,tck=0.02,
lwd.ticks=1.5, las=2,hadj=0)
par(new=T) # To add the temperature data to the same plot
plot(KI_sat,type='l',ylim=c(25,31.5),
xlim=c(startdate,enddate),
xlab="",ylab="",xaxs="i",xaxt='n',yaxt="n") # Plot the satellite temperature data
par(new=T) # To add the temperature data to the same plot
plot(KI_insitu,type='l',
ylim=c(25,31.5),xlim=c(startdate,enddate),
xlab="",ylab="",xaxs="i",
xaxt='n',yaxt="n",col="blue") # Plot the in situ temperature data
abline(29,0,col=cols[5],lwd=2) # Bleaching threshold
abline(28,0,col="black") # Mean Monthly Maximum - MMM
title(ylab="Degree Heating Weeks", line=1.2, cex.lab=1) # Label y axis
# Add in time axes (multiple axes added to allow for customization)
axis.POSIXct(side=1,KI_heat$time,cex.axis=0.93,tck=0.05,
lwd.ticks=2,labels=FALSE)
axis.POSIXct(side=1,
at=seq(KI_heat$time[1],KI_heat$time[1644],
by="month"),labels=FALSE,
tck=0.03,cex.axis=0.93,lwd.ticks=1.5,padj=-1.5)
axis.POSIXct(side=1,KI_heat$time,cex.axis=0.93,
tck=0,padj=-1.5)
Z <- c(26,27,28,29,30,31) # To be used as temperature y-axis values
axis(side=4,at=Z,cex.axis=0.93,tck=0.02,
lwd.ticks=1.5, las=2,hadj=0.95)
mtext("A",side=2, line=2.5,cex=1.2,las=2,
padj=-5.5,font=2) # Add label for figure, specify size
mtext("B",side=2, line=2.5,cex=1.2,las=2,
padj=8.3, font=2) # Add label for figure, specify size
mtext("i",side=2, line=-0.5, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("ii",side=2, line=-8.8, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("iii",side=2, line=-11.7, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("iv",side=2, line=-14.0, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("v",side=2, line=-15.6, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("vi",side=2, line=-17.8, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("vii",side=2, line=-20.8, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("viii",side=2, line=-25.4, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("ix",side=2, line=-30.7, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("Temperature (Â°C)",side=4, cex=1,line=1.1)
mtext("Mean Monthly Max.",side=2,line=-47.7,
cex=0.72,las=2,padj=0.2) # Label MMM line
mtext("Bleaching Threshold",side=2,line=-47.7,
cex=0.72,las=2,padj=-2.5) # Label bleaching threshold line
par(mar=c(0.5,0,0.05,0.75))
heatmap <- load.image('figures/ElNino_heatmap-4-1-01.jpg')
heatmap.crop <- autocrop(heatmap)
plot(heatmap.crop, axes=F)
# Close file and clear graphical parameters
dev.off()
pdf(file="figures/KI_figure2.pdf",width = 8, height = 5,useDingbats = FALSE)
# Set inner and outer margins
par(oma=c(0,0,0,0),mar=c(1.5,3.2,1,2.5),mfrow=c(2,1))
layout(matrix(c(1,2),nrow=2),heights=c(1,1.5))
# Plot with the polycurve function
with(KI_heat, plot(KI_heat$time,KI_heat$dhw, type="l",
xlab="", ylab="", ylim=c(0,26),cex.axis=1,xaxt='n',yaxt='n',
cex.lab=1.2,yaxs="i",xaxs="i",lwd=0.5, col="gray40",
panel.first = # Panel first allows ablines to be plotted before polycurve, looks nicer.
c(abline(v=KI2013,col="darkgray",
lwd=2,lty=2),
abline(v=KI2014,col="darkgray",
lwd=2,lty=2),
abline(v=KI2015a,col="darkgray",
lwd=2,lty=2),
abline(v=KI2015b,col="darkgray",
lwd=2,lty=2),
abline(v=KI2015c,col="darkgray",
lwd=2,lty=2),
abline(v=KI2015d,col="darkgray",
lwd=2,lty=2),
abline(v=KI2016a,col="darkgray",
lwd=2,lty=2),
abline(v=KI2016b,col="darkgray",
lwd=2,lty=2),
abline(v=KI2017,col="darkgray",
lwd=2,lty=2),
polyCurve(KI_heat$time,
KI_heat$dhw, from = from,
to = to, miny = 0,
col = dhw.cc.rgb)
)))
Y <- c(0,5,10,15,20,25)
axis(side=2,at=Y,cex.axis=0.93,tck=0.02,
lwd.ticks=1.5, las=2,hadj=0)
par(new=T) # To add the temperature data to the same plot
plot(KI_sat,type='l',ylim=c(25,31.5),
xlim=c(startdate,enddate),
xlab="",ylab="",xaxs="i",xaxt='n',yaxt="n") # Plot the satellite temperature data
par(new=T) # To add the temperature data to the same plot
plot(KI_insitu,type='l',
ylim=c(25,31.5),xlim=c(startdate,enddate),
xlab="",ylab="",xaxs="i",
xaxt='n',yaxt="n",col="blue") # Plot the in situ temperature data
abline(29,0,col=cols[5],lwd=2) # Bleaching threshold
abline(28,0,col="black") # Mean Monthly Maximum - MMM
title(ylab="Degree Heating Weeks", line=1.2, cex.lab=1) # Label y axis
# Add in time axes (multiple axes added to allow for customization)
axis.POSIXct(side=1,KI_heat$time,cex.axis=0.93,tck=0.05,
lwd.ticks=2,labels=FALSE)
axis.POSIXct(side=1,
at=seq(KI_heat$time[1],KI_heat$time[1644],
by="month"),labels=FALSE,
tck=0.03,cex.axis=0.93,lwd.ticks=1.5,padj=-1.5)
axis.POSIXct(side=1,KI_heat$time,cex.axis=0.93,
tck=0,padj=-1.5)
Z <- c(26,27,28,29,30,31) # To be used as temperature y-axis values
axis(side=4,at=Z,cex.axis=0.93,tck=0.02,
lwd.ticks=1.5, las=2,hadj=0.95)
mtext("A",side=2, line=2.5,cex=1.2,las=2,
padj=-5.5,font=2) # Add label for figure, specify size
mtext("B",side=2, line=2.5,cex=1.2,las=2,
padj=8.3, font=2) # Add label for figure, specify size
mtext("i",side=2, line=-0.5, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("ii",side=2, line=-8.8, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("iii",side=2, line=-11.7, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("iv",side=2, line=-14.0, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("v",side=2, line=-15.6, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("vi",side=2, line=-17.8, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("vii",side=2, line=-20.8, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("viii",side=2, line=-25.4, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("ix",side=2, line=-30.7, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("Temperature (Â°C)",side=4, cex=1,line=1.1)
mtext("Mean Monthly Max.",side=2,line=-47.7,
cex=0.72,las=2,padj=0.2) # Label MMM line
mtext("Bleaching Threshold",side=2,line=-47.7,
cex=0.72,las=2,padj=-2.5) # Label bleaching threshold line
par(mar=c(0.5,0,0.05,0.75))
heatmap <- load.image('figures/ElNino_heatmap-4-1-01.jpg')
heatmap.crop <- autocrop(heatmap)
plot(heatmap.crop, axes=F)
# Close file and clear graphical parameters
dev.off()
# Load necessary packages
library(ggplot2)
library(gridExtra)
library(colorRamps)
library(here)
library(dplyr)
library(tidyr)
# Load necessary data
load("data/NOAA_5km_bysite.RData")
# Set x limits
xlim1 <- as.POSIXct("2011/6/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
xlim2 <- as.POSIXct("2017/1/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
xlim3 <- as.POSIXct("2015/2/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
xlim4 <- as.POSIXct("2016/9/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
# cols <- colorRamps::primary.colors(n=19)
cols <- viridis::viridis(n = 19,direction = -1)
dhw_allsites_long <- dhw_allsites %>%
gather(site, dhw, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, X23, X24, X25, X26, X27, X28, X29, X30, X31, X32, X33, X34, X35, X36, X37, X38, X39, X40, -date) %>% filter(site %in% c("X6","X14","X8","X35","X34","X9","X32","X27","X30","X26","X25","X3","X38","X1","X23","X20","X15","X19"))
head(dhw_allsites_long)
# Plot
NOAA_DHW <- ggplot(aes(x=date,y=dhw,color=site),data=dhw_allsites_long)+
theme_classic()+
theme(legend.position = "right")+
geom_hline(yintercept = 4,linetype="dashed")+
geom_hline(yintercept = 8,linetype="dashed")+
geom_hline(yintercept = 12,linetype="dashed")+
geom_hline(yintercept = 16,linetype="dashed")+
geom_hline(yintercept = 20,linetype="dashed")+
geom_hline(yintercept = 24,linetype="dashed")+
geom_hline(yintercept = 28,linetype="dashed")+
geom_line()+
# geom_line(aes(x=date,y=X6),color=cols[2])+
# geom_line(aes(x=date,y=X14),color=cols[3])+
# geom_line(aes(x=date,y=X8),color=cols[4])+
# geom_line(aes(x=date,y=X35),color=cols[5])+
# geom_line(aes(x=date,y=X34),color=cols[6])+
# geom_line(aes(x=date,y=X9),color=cols[7])+
# geom_line(aes(x=date,y=X32),color=cols[8])+
# geom_line(aes(x=date,y=X27),color=cols[9])+
# geom_line(aes(x=date,y=X30),color=cols[10])+
# geom_line(aes(x=date,y=X26),color=cols[11])+
# geom_line(aes(x=date,y=X25),color=cols[12])+
# geom_line(aes(x=date,y=X3),color=cols[13])+
# geom_line(aes(x=date,y=X38),color=cols[14])+
# geom_line(aes(x=date,y=X1),color=cols[15])+
# geom_line(aes(x=date,y=X23),color=cols[16])+
# geom_line(aes(x=date,y=X20),color=cols[17])+
# geom_line(aes(x=date,y=X15),color=cols[18])+
# geom_line(aes(x=date,y=X19),color=cols[19])+
scale_x_datetime(name=NULL, expand=c(0,0),
limits=c(xlim3,xlim4),
date_labels = "%b-%Y",
date_breaks = "3 months")+
scale_y_continuous(name="DHW (ÂºC-week)",
limits=c(0,26),expand=c(0,0),
breaks = c(0,4,8,12,16,20,24))+
scale_color_manual(values=cols[c(1:19)],
breaks=c('X5', 'X6', 'X14', 'X8', 'X35', 'X34',
'X9', 'X32', 'X27', 'X30', 'X26',
'X25', 'X3', 'X38', 'X1',
'X23', 'X20', 'X15', 'X19'),
labels=c("VL3", "M6", "M4", "M1", "M2", "M3",
"L4", "VH2", "VH1", "VH3", "H2",
"M5", "L1", "L2", "M10",
"L5", "VL5", "VL1", "VL2"))
NOAA_DHW
# Make pdf
pdf(file = "figures/Figure_S5.pdf",
width = 5.5, height = 5, useDingbats = FALSE)
NOAA_DHW
dev.off()
library(ggplot2)
library(gridExtra)
load("data/NOAA_5km_bleachingbysite_mean_historical.RData")
firstglobalbleaching_start <- as.POSIXct("1997/4/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
firstglobalbleaching_end <- as.POSIXct("1998/4/30 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
secondglobalbleaching_start <- as.POSIXct("2009/6/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
secondglobalbleaching_end <- as.POSIXct("2010/4/30 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
thirdglobalbleaching_start <- as.POSIXct("2014/1/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
thirdglobalbleaching_end <- as.POSIXct("2017/12/31 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
historical_dhw <- ggplot(data=dhw_bleachingsites_mean)+
theme_classic()+
annotate("rect", xmin = firstglobalbleaching_start,
xmax = firstglobalbleaching_end,
ymin = 0, ymax = Inf,
alpha = .5)+
annotate("rect", xmin = secondglobalbleaching_start,
xmax = secondglobalbleaching_end,
ymin = 0, ymax = Inf,
alpha = .5)+
annotate("rect", xmin = thirdglobalbleaching_start,
xmax = thirdglobalbleaching_end,
ymin = 0, ymax = Inf,
alpha = .5)+
geom_line(aes(x=date,y=mean_dhw),color="black",size=1.5)+
geom_hline(yintercept = 4,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 8,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 12,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 16,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 20,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 24,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 28,linetype="dashed",color="darkgray")+
scale_x_datetime(name="Year", expand=c(0,0),
date_labels = "%Y",date_breaks = "1 year")+
scale_y_continuous(name="Degree heating weeks (Â°C-weeks)",
limits=c(0,29),expand=c(0,0),
breaks = c(0,4,8,12,16,20,24,28))
historical_dhw
pdf(file = "figures/KI_historical_dhw_FigS6.pdf", width = 12, height = 4, useDingbats = FALSE)
historical_dhw
dev.off()
library(ggplot2)
library(gridExtra)
load("data/NOAA_5km_bleachingbysite_mean_historical.RData")
firstglobalbleaching_start <- as.POSIXct("1997/4/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
firstglobalbleaching_end <- as.POSIXct("1998/4/30 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
secondglobalbleaching_start <- as.POSIXct("2009/6/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
secondglobalbleaching_end <- as.POSIXct("2010/4/30 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
thirdglobalbleaching_start <- as.POSIXct("2014/1/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
thirdglobalbleaching_end <- as.POSIXct("2017/12/31 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
historical_dhw <- ggplot(data=dhw_bleachingsites_mean)+
theme_classic()+
annotate("rect", xmin = firstglobalbleaching_start,
xmax = firstglobalbleaching_end,
ymin = 0, ymax = Inf,
alpha = .5)+
annotate("rect", xmin = secondglobalbleaching_start,
xmax = secondglobalbleaching_end,
ymin = 0, ymax = Inf,
alpha = .5)+
annotate("rect", xmin = thirdglobalbleaching_start,
xmax = thirdglobalbleaching_end,
ymin = 0, ymax = Inf,
alpha = .5)+
geom_line(aes(x=date,y=mean_dhw),color="black",size=1.5)+
geom_hline(yintercept = 4,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 8,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 12,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 16,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 20,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 24,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 28,linetype="dashed",color="darkgray")+
scale_x_datetime(name="Year", expand=c(0,0),
date_labels = "%Y",date_breaks = "1 year")+
scale_y_continuous(name="Degree heating weeks (Â°C-weeks)",
limits=c(0,29),expand=c(0,0),
breaks = c(0,4,8,12,16,20,24,28))
historical_dhw
