KI_heat$dhw, from = from,
to = to, miny = 0,
col = dhw.cc.rgb)
)))
Y <- c(0,5,10,15,20,25)
axis(side=2,at=Y,cex.axis=0.93,tck=0.02,
lwd.ticks=1.5, las=2,hadj=0)
par(new=T) # To add the temperature data to the same plot
plot(KI_sat,type='l',ylim=c(25,31.5),
xlim=c(startdate,enddate),
xlab="",ylab="",xaxs="i",xaxt='n',yaxt="n") # Plot the satellite temperature data
par(new=T) # To add the temperature data to the same plot
plot(KI_insitu,type='l',
ylim=c(25,31.5),xlim=c(startdate,enddate),
xlab="",ylab="",xaxs="i",
xaxt='n',yaxt="n",col="blue") # Plot the in situ temperature data
abline(29,0,col=cols[5],lwd=2) # Bleaching threshold
abline(28,0,col="black") # Mean Monthly Maximum - MMM
title(ylab="Degree Heating Weeks", line=1.2, cex.lab=1) # Label y axis
# Add in time axes (multiple axes added to allow for customization)
axis.POSIXct(side=1,KI_heat$time,cex.axis=0.93,tck=0.05,
lwd.ticks=2,labels=FALSE)
axis.POSIXct(side=1,
at=seq(KI_heat$time[1],KI_heat$time[1644],
by="month"),labels=FALSE,
tck=0.03,cex.axis=0.93,lwd.ticks=1.5,padj=-1.5)
axis.POSIXct(side=1,KI_heat$time,cex.axis=0.93,
tck=0,padj=-1.5)
Z <- c(26,27,28,29,30,31) # To be used as temperature y-axis values
axis(side=4,at=Z,cex.axis=0.93,tck=0.02,
lwd.ticks=1.5, las=2,hadj=0.95)
mtext("A",side=2, line=2.5,cex=1.2,las=2,
padj=-5.5,font=2) # Add label for figure, specify size
mtext("B",side=2, line=2.5,cex=1.2,las=2,
padj=8.3, font=2) # Add label for figure, specify size
mtext("i",side=2, line=-0.5, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("ii",side=2, line=-8.8, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("iii",side=2, line=-11.7, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("iv",side=2, line=-14.0, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("v",side=2, line=-15.6, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("vi",side=2, line=-17.8, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("vii",side=2, line=-20.8, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("viii",side=2, line=-25.4, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("ix",side=2, line=-30.7, cex=1, las=2,
padj=-5) # Add sampling date label
mtext("Temperature (°C)",side=4, cex=1,line=1.1)
mtext("Mean Monthly Max.",side=2,line=-47.7,
cex=0.72,las=2,padj=0.2) # Label MMM line
mtext("Bleaching Threshold",side=2,line=-47.7,
cex=0.72,las=2,padj=-2.5) # Label bleaching threshold line
par(mar=c(0.5,0,0.05,0.75))
heatmap <- load.image('figures/ElNino_heatmap-4-1-01.jpg')
heatmap.crop <- autocrop(heatmap)
plot(heatmap.crop, axes=F)
# Close file and clear graphical parameters
dev.off()
# Load necessary packages
library(ggplot2)
library(gridExtra)
library(colorRamps)
library(here)
library(dplyr)
library(tidyr)
# Load necessary data
load("data/NOAA_5km_bysite.RData")
# Set x limits
xlim1 <- as.POSIXct("2011/6/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
xlim2 <- as.POSIXct("2017/1/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
xlim3 <- as.POSIXct("2015/2/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
xlim4 <- as.POSIXct("2016/9/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
# cols <- colorRamps::primary.colors(n=19)
cols <- viridis::viridis(n = 19,direction = -1)
dhw_allsites_long <- dhw_allsites %>%
gather(site, dhw, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, X23, X24, X25, X26, X27, X28, X29, X30, X31, X32, X33, X34, X35, X36, X37, X38, X39, X40, -date) %>% filter(site %in% c("X6","X14","X8","X35","X34","X9","X32","X27","X30","X26","X25","X3","X38","X1","X23","X20","X15","X19"))
head(dhw_allsites_long)
# Plot
NOAA_DHW <- ggplot(aes(x=date,y=dhw,color=site),data=dhw_allsites_long)+
theme_classic()+
theme(legend.position = "right")+
geom_hline(yintercept = 4,linetype="dashed")+
geom_hline(yintercept = 8,linetype="dashed")+
geom_hline(yintercept = 12,linetype="dashed")+
geom_hline(yintercept = 16,linetype="dashed")+
geom_hline(yintercept = 20,linetype="dashed")+
geom_hline(yintercept = 24,linetype="dashed")+
geom_hline(yintercept = 28,linetype="dashed")+
geom_line()+
# geom_line(aes(x=date,y=X6),color=cols[2])+
# geom_line(aes(x=date,y=X14),color=cols[3])+
# geom_line(aes(x=date,y=X8),color=cols[4])+
# geom_line(aes(x=date,y=X35),color=cols[5])+
# geom_line(aes(x=date,y=X34),color=cols[6])+
# geom_line(aes(x=date,y=X9),color=cols[7])+
# geom_line(aes(x=date,y=X32),color=cols[8])+
# geom_line(aes(x=date,y=X27),color=cols[9])+
# geom_line(aes(x=date,y=X30),color=cols[10])+
# geom_line(aes(x=date,y=X26),color=cols[11])+
# geom_line(aes(x=date,y=X25),color=cols[12])+
# geom_line(aes(x=date,y=X3),color=cols[13])+
# geom_line(aes(x=date,y=X38),color=cols[14])+
# geom_line(aes(x=date,y=X1),color=cols[15])+
# geom_line(aes(x=date,y=X23),color=cols[16])+
# geom_line(aes(x=date,y=X20),color=cols[17])+
# geom_line(aes(x=date,y=X15),color=cols[18])+
# geom_line(aes(x=date,y=X19),color=cols[19])+
scale_x_datetime(name=NULL, expand=c(0,0),
limits=c(xlim3,xlim4),
date_labels = "%b-%Y",
date_breaks = "3 months")+
scale_y_continuous(name="DHW (ºC-week)",
limits=c(0,26),expand=c(0,0),
breaks = c(0,4,8,12,16,20,24))+
scale_color_manual(values=cols[c(1:19)],
breaks=c('X5', 'X6', 'X14', 'X8', 'X35', 'X34',
'X9', 'X32', 'X27', 'X30', 'X26',
'X25', 'X3', 'X38', 'X1',
'X23', 'X20', 'X15', 'X19'),
labels=c("VL3", "M6", "M4", "M1", "M2", "M3",
"L4", "VH2", "VH1", "VH3", "H2",
"M5", "L1", "L2", "M10",
"L5", "VL5", "VL1", "VL2"))
NOAA_DHW
# Make pdf
pdf(file = "figures/Figure_S5.pdf",
width = 5.5, height = 5, useDingbats = FALSE)
NOAA_DHW
dev.off()
library(ggplot2)
library(gridExtra)
load("data/NOAA_5km_bleachingbysite_mean_historical.RData")
firstglobalbleaching_start <- as.POSIXct("1997/4/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
firstglobalbleaching_end <- as.POSIXct("1998/4/30 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
secondglobalbleaching_start <- as.POSIXct("2009/6/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
secondglobalbleaching_end <- as.POSIXct("2010/4/30 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
thirdglobalbleaching_start <- as.POSIXct("2014/1/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
thirdglobalbleaching_end <- as.POSIXct("2017/12/31 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
historical_dhw <- ggplot(data=dhw_bleachingsites_mean)+
theme_classic()+
annotate("rect", xmin = firstglobalbleaching_start,
xmax = firstglobalbleaching_end,
ymin = 0, ymax = Inf,
alpha = .5)+
annotate("rect", xmin = secondglobalbleaching_start,
xmax = secondglobalbleaching_end,
ymin = 0, ymax = Inf,
alpha = .5)+
annotate("rect", xmin = thirdglobalbleaching_start,
xmax = thirdglobalbleaching_end,
ymin = 0, ymax = Inf,
alpha = .5)+
geom_line(aes(x=date,y=mean_dhw),color="black",size=1.5)+
geom_hline(yintercept = 4,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 8,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 12,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 16,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 20,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 24,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 28,linetype="dashed",color="darkgray")+
scale_x_datetime(name="Year", expand=c(0,0),
date_labels = "%Y",date_breaks = "1 year")+
scale_y_continuous(name="Degree heating weeks (°C-weeks)",
limits=c(0,29),expand=c(0,0),
breaks = c(0,4,8,12,16,20,24,28))
historical_dhw
pdf(file = "figures/KI_historical_dhw_FigS6.pdf", width = 12, height = 4, useDingbats = FALSE)
historical_dhw
dev.off()
library(ggplot2)
library(gridExtra)
load("data/NOAA_5km_bleachingbysite_mean_historical.RData")
firstglobalbleaching_start <- as.POSIXct("1997/4/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
firstglobalbleaching_end <- as.POSIXct("1998/4/30 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
secondglobalbleaching_start <- as.POSIXct("2009/6/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
secondglobalbleaching_end <- as.POSIXct("2010/4/30 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
thirdglobalbleaching_start <- as.POSIXct("2014/1/1 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
thirdglobalbleaching_end <- as.POSIXct("2017/12/31 00:00:00",
format="%Y/%m/%d %H:%M:%S",
tz="Pacific/Kiritimati")
historical_dhw <- ggplot(data=dhw_bleachingsites_mean)+
theme_classic()+
annotate("rect", xmin = firstglobalbleaching_start,
xmax = firstglobalbleaching_end,
ymin = 0, ymax = Inf,
alpha = .5)+
annotate("rect", xmin = secondglobalbleaching_start,
xmax = secondglobalbleaching_end,
ymin = 0, ymax = Inf,
alpha = .5)+
annotate("rect", xmin = thirdglobalbleaching_start,
xmax = thirdglobalbleaching_end,
ymin = 0, ymax = Inf,
alpha = .5)+
geom_line(aes(x=date,y=mean_dhw),color="black",size=1.5)+
geom_hline(yintercept = 4,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 8,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 12,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 16,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 20,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 24,linetype="dashed",color="darkgray")+
geom_hline(yintercept = 28,linetype="dashed",color="darkgray")+
scale_x_datetime(name="Year", expand=c(0,0),
date_labels = "%Y",date_breaks = "1 year")+
scale_y_continuous(name="Degree heating weeks (°C-weeks)",
limits=c(0,29),expand=c(0,0),
breaks = c(0,4,8,12,16,20,24,28))
historical_dhw
# Clear environment
rm(list=ls())
# Load packages
library(here)
library(ggplot2)
library(beyonce)
library(interactions)
library(ggnewscale)
library(lemon)
library(grid)
library(cowplot)
# Load data
load(file="data/KI_PhotoQuadData.RData")
# Look at dfs
head(quad.before) #for fig 1C
head(quad.hc.heat) #for fig3A
head(quad.heat.human) #for fig 3E
head(percent.loss) #for fig 6A
head(percent.change) #for fig 6b graph
head(piechart.before) #for fig 6b pie chart before
head(piechart.after) #for fig 6b pie chart after
head(bleaching.heat) #for fig S6a
head(bleaching.heat.human) #for fig S6b
head(bleaching.heat.species) #for fig S6c
head(benthic.cover.heat) #for fig S7a
head(benthic.cover.heat.human) #for fig S7b-f
head(benthic.change.heat) #for fig S7g
head(benthic.change.heat.human) #for fig S7h-l
# Create labels for local disturbance categories
localdisturb.labels=c("Very.High"="Very High", "High"="High", "Medium"="Medium", "Low"="Low", "Very.Low"="Very Low")
# Create labels for the coral species
taxa.labels=c("Rare"="Rare Species", "Platygyra.spp"= expression(italic("Platygyra spp.")),  "Acropora.tabulate" = expression(paste(italic("Acropora spp."), " (tabulate)")), "Favia.matthai"=expression(italic("Dipsastraea matthaii")),
"Favia.stelligera"=expression(italic("Goniastrea stelligera ")), "Favites.pentagona"=expression(italic("Favites pentagona")), "Hydnophora.microconos"=expression(italic("Hydnophora microconos")),
"Montipora.foliose"=expression(paste(italic("Montipora"), " (foliose)")),"Montipora.encrusting"=expression(paste(italic("Monitopora"), " (encrusting)")), "Pavona.varians"=expression(italic("Pavona varians")),
"Pocillopora.eydouxi"=expression(italic("Pocillopora grandis")), "Pocillopora.meandrina"=expression(italic("Pocillopora meandrina")), "Porites.spp"=expression(italic("Porites lobata")), "Leptastrea.spp"=expression(italic("Leptastrea spp.")), "Astreopora.spp"=expression(italic("Astreopora spp.")), "Pavona.duerdeni" = expression(italic("Pavona duerdeni")))
taxa.labels.short=c("Rare"="Rare Species", "Platygyra.spp"=expression(italic("Platygyra spp.")),  "Acropora.tabulate" = expression(paste(italic("Acropora"), " tab.")), "Favia.matthai"=expression(italic("D. matthaii")),
"Favia.stelligera"=expression(italic("G. stelligera ")), "Favites.pentagona"=expression(italic("F. pentagona")), "Hydnophora.microconos"=expression(italic("H. microconos")),
"Montipora.foliose"=expression(paste(italic("Montipora"), " fol.")),"Montipora.encrusting"=expression(paste(italic("Monitopora"), " en.")), "Pavona.varians"=expression(italic("P. varians")),
"Pocillopora.eydouxi"=expression(italic("P. grandis")), "Pocillopora.meandrina"=expression(italic("P. meandrina")), "Porites.spp"=expression(italic("P. lobata")), "Leptastrea.spp"=expression(italic("Leptastrea spp.")), "Astreopora.spp"=expression(italic("Astreopora spp.")), "Pavona.duerdeni" = expression(italic("P. duerdeni")), parse = TRUE)
# Create labels for heat
field.labels=c("EarlyEN"="Early", "MidEN"="Mid", "LateEN"= "Late")
# Create scale for coral species
taxa.cols=c("Rare"="gray88",
"Leptastrea.spp"="thistle",
"Astreopora.spp"="lemonchiffon1", "Pavona.varians"="peachpuff1", "Platygyra.spp"="tomato2", "Favites.pentagona"="lightcoral", "Favia.matthai"="goldenrod2", "Hydnophora.microconos"="sienna1", "Favia.stelligera"="khaki2",
"Porites.spp"="darkred",  "Pavona.duerdeni" ="salmon3",
"Montipora.encrusting"="blue3", "Pocillopora.meandrina"="steelblue2", "Pocillopora.eydouxi"="royalblue3", "Acropora.tabulate"="paleturquoise", "Montipora.foliose"="midnightblue")
# set color for overall plots
overall.color <-  beyonce_palette(90)
#<-------------------------------------------------->
# Figure 1
###############
### panel c ###
###############
#check orders
levels(quad.before$localdisturbance.categorical)
levels(quad.before$substrate)
#plot
fig1c<-ggplot(quad.before, aes(x=localdisturbance.categorical, y=percent.cover,  fill=substrate)) +
geom_bar(stat="identity",position= "stack") +
labs(x="Human Disturbance", y="Percent Cover", title="") +
theme_cowplot() +
theme(legend.title=element_blank(),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.text = element_text(size = 18, color = "black"),
axis.title.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
legend.text = element_text(size = 12),
legend.position="bottom") +
scale_fill_manual(breaks=rev(c("Other", "ABIOTIC.SUBSTRATES", "FLESH.MACRO", "TURF.ALGAE", "CCA.PEY", "SOFT.CORAL", "HARD.CORAL")),
values=c("#8660a5", "cadetblue2", "palevioletred1", "limegreen", "green4", "wheat2", "grey40"),
labels=c("Hard Coral", "Soft Coral", "CCA", "Turf", "Macroalgae", "Abiotic", "Other"))+
scale_x_discrete(labels = localdisturb.labels) + guides(fill = guide_legend(ncol = 5)) +
scale_y_continuous(expand = c(0,0))
fig1c
# #Print to pdfs
# pdf(file = "figures/spq/Fig1c_substrate_before.pdf", width = 4.5, height = 6)
# fig1b
# dev.off()
#<-------------------------------------------------->
# Figure 3
###############
### panel a ###
###############
#check order
levels(quad.hc.heat$heat)
#plot
#pdf(file = "figures/spq/Hardcoralcover_before.after.pdf", width = 4, height = 4.5)
ggplot(quad.hc.heat, aes(x = heat, y = percent.cover, fill = heat)) + geom_boxplot(position = "dodge2") +
labs(x = "", y = "Percent Hard Coral Cover", fill = "") +
scale_fill_manual(values = c("#654A89", "#C2B0D3"), breaks = c("Before", "After")) +
theme_classic() + guides(fill = "none") +
theme(axis.text = element_text(color = "black", size = 16),
axis.title.y=element_text(size=20, face="plain"))
#dev.off()
###############
### panel e ###
###############
#check orders
levels(quad.heat.human$heat)
levels(quad.heat.human$localdisturbance.categorical)
levels(quad.heat.human$species)
#plot
fig3e<-ggplot(quad.heat.human, aes(x=heat, y=percent.cover)) +
geom_bar(stat="identity", aes(fill=species)) +
theme_cowplot() +
labs(x="", y="Percent of Hard Coral Cover", shape="", title="") +
theme(strip.background=element_blank(),
legend.title=element_blank(),
axis.title.y=element_text( size=26, face="plain"),
axis.line.x = element_line(color="black", size = 0.5),
legend.position = "bottom",
axis.line.y = element_line(color="black", size = 0.5),
axis.text = element_text(size = 24),
strip.text = element_text(size = 24),
legend.text = element_text(size = 22, hjust = 0),
legend.key.size = unit(1.3, "line")) +
facet_wrap(~localdisturbance.categorical, nrow=1, scales="free", labeller=labeller(localdisturbance.categorical=localdisturb.labels)) +
scale_fill_manual(values=taxa.cols,
labels=taxa.labels.short) +
scale_y_continuous(expand=c(0,0), limits=c(0,100.1)) +
guides(fill = guide_legend(override.aes = list(colour = "black")))
fig3e
# # Print to pdf
# pdf(file = "figures/spq/sp_comp_beforeafter.pdf", width = 10.8, height = 8.2)
# fig3e
# dev.off()
#<-------------------------------------------------->
# Figure 6
###############
### panel a ###
###############
taxa.cols.lollipop=c("paleturquoise", "midnightblue", "blue3", "royalblue3", "steelblue2", "peachpuff1", "thistle",
"lemonchiffon1", "sienna1", "goldenrod2",  "khaki2", "lightcoral", "darkred", "salmon3",  "tomato2")
fig6a<-ggplot(percent.loss) +
geom_segment( aes(x=species, xend=species, y=0, yend=percent.loss.quad), color="grey40") +
geom_point(aes(x=species, y=percent.loss.quad), color = "black", fill = taxa.cols.lollipop, size=4, shape = 21) +
geom_point(aes(x=species, y=percent.loss.tagged), color = "black", fill = taxa.cols.lollipop, size=4, shape = 23) +
coord_flip() + theme_light() +
labs(x = "", y = "Percent Loss") +
scale_x_discrete(labels = taxa.labels.short) +
scale_y_continuous(expand = c(0,0), limits = c(0,105)) +
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey65"), panel.grid.minor.x = element_line(color = "grey75"),
panel.border = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black"))
fig6a
percent.loss
fig6a<-ggplot(percent.loss) +
geom_segment( aes(x=species, xend=species, y=0, yend=percent.loss.quad), color="grey40") +
geom_point(aes(x=species, y=percent.loss.quad), color = "black", fill = taxa.cols.lollipop, size=4, shape = 21) +
geom_point(aes(x=species, y=percent.loss.tagged), color = "black", fill = taxa.cols.lollipop, size=4, shape = 23) +
coord_flip() + theme_light() +
labs(x = "", y = "Percent Loss") +
scale_x_discrete(labels = taxa.labels.short) +
scale_y_continuous(expand = c(0,0), limits = c(0,105)) +
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey65"), panel.grid.minor.x = element_line(color = "grey75"),
panel.border = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black"))
percent.loss
# Transformation of coral communities subjected to an unprecedented heatwave is modulated by local disturbance
# Authors: Julia K. Baum [1,2], Danielle C. Claar [1,3], Kristina L. Tietjen [1], Jennifer M.T. Magel [1,4],
# Dominique G. Maucieri [1], Kim M. Cobb [5], Jamie M. McDevitt-Irwin [1,6]
# [1] Department of Biology, University of Victoria, Victoria, BC V8P 5C2, Canada
# [2] Hawai'i Institute of Marine Biology, Kane'ohe, HI 96744, USA
# [3] School of Aquatic and Fisheries Sciences, University of Washington, Seattle, WA 98105, USA
# [4] Department of Forest and Conservation Sciences, University of British Columbia, Vancouver, BC V6T 1Z4, Canada
# [5] School of Earth and Atmospheric Sciences, Georgia Institute of Technology, Atlanta, GA 30318, USA
# [6] Hopkins Marine Station, Stanford University, Pacific Grove, CA 93950, USA
# Corresponding author: Julia K. Baum, email: baum@uvic.ca
# Script to fit three sets of models examining the impacts of heat stress, local human disturbance, and other factors
# on levels of hard coral cover around Kiritimati:
# A) A generalized linear model (GLM) examining influences on hard coral cover prior to the 2015-2016 El Ni?o
# B) Generalized linear mixed-effects models (GLMMs) testing the interacting effects of heat stress and local human
# disturbance on hard coral cover
# C) A GLMM testing the interacting effect of heat stress and dominant life history type on hard coral cover
########################################################################################################################
## GENERAL SET-UP
## Load necessary packages
library(dplyr)
library(arm)
library(glmmTMB)
library(MuMIn)
library(performance)
library(DHARMa)
library(here)
library(Rmisc)
library(reshape2)
library(emmeans)
## Load the data
load(file = "../data/KI_CoralCoverData.RData")
load(file = "../data/KI_CoralCoverData_LH.RData")
## Clean the data
source("../analyses/KI_coral_cover_clean.R")
########################################################################################################################
### MODEL SET A
# Generalized linear model testing the impact of local human disturbance and environmental factors on hard coral cover
# on Kiritimati prior to the 2015-2016 El Ni?o.
## Model specifications:
# Expeditions: Four expeditions conducted prior to the heatwave (2013-2015b)
# Fixed effects: local human disturbance ('local_dist_z'; continuous), net primary productivity ('npp_max_z'; continuous),
# site-level maximum mean monthly temperature ('mmm_temp_z'; continuous), and site exposure ('exposure'; categorical,
# windward/sheltered)
# Random effects: none
##################################
### MODEL1
# Fit model and output results
model1 <- glmmTMB(mean.cover ~ local_dist_z + poly(npp_max_z, 2) + mmm_temp_z + exposure,
data = p.cover.b.avg, family = beta_family(link = "logit"))
summary(model1)
## Load the data
load(file = "data/KI_CoralCoverData.RData")
load(file = "data/KI_CoralCoverData_LH.RData")
## Clean the data
source("analyses/KI_coral_cover_clean.R")
# Fit model and output results
model1 <- glmmTMB(mean.cover ~ local_dist_z + poly(npp_max_z, 2) + mmm_temp_z + exposure,
data = p.cover.b.avg, family = beta_family(link = "logit"))
summary(model1)
# Assess model performance
model_performance(model1)
check_model(model1, check = c("pp_check", "vif"))
model1.resid <- simulateResiduals(fittedModel = model1)
plot(model1.resid)
# Plot residuals against predictor variables
plotResiduals(model1.resid, p.cover.b.avg$local_dist_z)
# Fit model and output results
model1 <- glmmTMB(mean.cover ~ local_dist_z + npp_max_z + mmm_temp_z + exposure,
data = p.cover.b.avg, family = beta_family(link = "logit"))
summary(model1)
# Assess model performance
model_performance(model1)
check_model(model1, check = c("pp_check", "vif"))
model1.resid <- simulateResiduals(fittedModel = model1)
plot(model1.resid)
# Plot residuals against predictor variables
plotResiduals(model1.resid, p.cover.b.avg$local_dist_z)
plotResiduals(model1.resid, p.cover.b.avg$npp_max_z)
source('~/Documents/github/Baum_etal_2023_ScienceAdvances/analyses/KI_coral_cover_analyses.R')
## Load necessary packages
library(dplyr)
library(arm)
library(glmmTMB)
library(MuMIn)
library(performance)
library(DHARMa)
library(here)
library(Rmisc)
library(reshape2)
library(emmeans)
## Load the data
load(file = "../data/KI_CoralCoverData.RData")
load(file = "../data/KI_CoralCoverData_LH.RData")
## Clean the data
source("../analyses/KI_coral_cover_clean.R")
## Load the data
load(file = "data/KI_CoralCoverData.RData")
load(file = "data/KI_CoralCoverData_LH.RData")
## Clean the data
source("analyses/KI_coral_cover_clean.R")
# Fit model and output results
model1 <- glmmTMB(mean.cover ~ local_dist_z + poly(npp_max_z, 2) + mmm_temp_z + exposure,
data = p.cover.b.avg, family = beta_family(link = "logit"))
summary(model1)
